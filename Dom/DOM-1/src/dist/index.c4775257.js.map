{"mappings":"AAAA,MAAM,MAAM,IAAI,OAAO;AACvB,QAAQ,IAAI;AAEZ,IAAI,MAAM,MAAM;AAChB,oDAAoD;AAEpD,MAAM,OAAO,IAAI,OAAO;AACxB,IAAI,KAAK,MAAM;AAEf,MAAM,QAAQ,IAAI,MAAM,OAAO;AAC/B,QAAQ,IAAI;AAEZ,IAAI,KAAK,MAAM,SAAS;AACxB,MAAM,QAAQ,IAAI,KAAK,MAAM;AAC7B,QAAQ,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC;AAC7B,8BAA8B;AAG9B,IAAI,KAAK,MAAM;AACf,IAAI,KAAK;AAET,IAAI,MAAM,MAAM;IAAE,QAAQ;IAAiB,OAAO;AAAO;AACzD,QAAQ,IAAI,IAAI,MAAM,MAAM;AAC5B,IAAI,MAAM,MAAM,UAAU;AAE1B,IAAI,MAAM,IAAI,MAAM;AACpB,IAAI,MAAM,IAAI,MAAM;AACpB,IAAI,MAAM,OAAO,MAAM;AACvB,QAAQ,IAAI,IAAI,MAAM,IAAI,MAAM;AAChC,YAAY;AAEZ,MAAM,KAAK;IACP,QAAQ,IAAI;AAChB;AACA,IAAI,GAAG,MAAM,SAAS;AACtB,IAAI,IAAI,MAAM,SAAS;AACvB,KAAK;AAEL,MAAM,UAAU,IAAI,KAAK,QAAQ,CAAC,EAAE;AACpC,QAAQ,IAAI;AACZ,MAAM,QAAQ,IAAI,KAAK,SAAS,CAAC,EAAE,CAAC,2BAA2B;;AAC/D,QAAQ,IAAI,IAAI,KAAK,QAAQ,MAAM,CAAC,EAAE;AAEtC,QAAQ,IAAI,IAAI,OAAO;AAEvB,MAAM,KAAK,IAAI,KAAK,MAAM,CAAC,EAAE,CAAG,SAAS;;AACzC,QAAQ,IAAI,IAAI,SAAS;AACzB,QAAQ,IAAI,IAAI,KAAK;AACrB,QAAQ,IAAI,IAAI,SAAS;AAEzB,MAAM,IAAI,IAAI,KAAK,UAAU,CAAC,EAAE,CAAI,SAAS;;AAC7C,IAAI,KAAK,IAAI,SAAS,IAAI,CAAC,IAAM,IAAI,MAAM,GAAG,SAAS;AAEvD,QAAQ,IAAI,IAAI,MAAM,KAAM,UAAU","sources":["main.js"],"sourcesContent":["const div = dom.create(\"<div>newDiv</div>\");\r\nconsole.log(div);\r\n\r\ndom.after(test, div);\r\n// html里面先写了一个div#test 然后在dom里面写函数等 之后在main.js里面直接操作\r\n\r\nconst div3 = dom.create('<div id=\"parent\"></div>')\r\ndom.wrap(test, div3)\r\n\r\nconst nodes = dom.empty(window.empty)\r\nconsole.log(nodes)\r\n\r\ndom.attr(test, 'title', 'Hi, I am Frank')\r\nconst title = dom.attr(test, 'title')\r\nconsole.log(`title: ${title}`)\r\n// html 里的test的title改为'Hi....'\r\n\r\n\r\ndom.text(test, '你好，这是新的内容')\r\ndom.text(test)\r\n\r\ndom.style(test, { border: '1px solid red', color: 'blue' })\r\nconsole.log(dom.style(test, 'border'))\r\ndom.style(test, 'border', '1px solid black')\r\n\r\ndom.class.add(test, 'red')\r\ndom.class.add(test, 'blue')\r\ndom.class.remove(test, 'blue')\r\nconsole.log(dom.class.has(test, 'blue'))\r\n// 用于添加class\r\n\r\nconst fn = () => {\r\n    console.log('点击了')\r\n}\r\ndom.on(test, 'click', fn)\r\ndom.off(test, 'click', fn)\r\n// 监听\r\n\r\nconst testDiv = dom.find('#test')[0]\r\nconsole.log(testDiv)\r\nconst test2 = dom.find('#test2')[0] // 之间的test已经empty所以单独用test2\r\nconsole.log(dom.find('.red', test2)[0])\r\n\r\nconsole.log(dom.parent(test))\r\n\r\nconst s2 = dom.find('#s2')[0]   // 创建一个变量\r\nconsole.log(dom.siblings(s2))\r\nconsole.log(dom.next(s2))\r\nconsole.log(dom.previous(s2))\r\n\r\nconst t = dom.find('#travel')[0]    // 用于遍历元素\r\ndom.each(dom.children(t), (n) => dom.style(n, 'color', 'red'))\r\n\r\nconsole.log(dom.index(s2))  //用于获取排行老几"],"names":[],"version":3,"file":"index.c4775257.js.map","sourceRoot":"/__parcel_source_root/"}
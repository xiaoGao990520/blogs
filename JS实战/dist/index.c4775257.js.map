{"mappings":"AAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,AAAC,EAAE,wBAAwB;AACrE,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,AAAC;AAC5C,IAAI,MAAM,GAAG,CAAC,okCA2Cd,CAAC,AAAC,EAAO,YAAY;AACrB,iDAAiD;AACjD,IAAI,OAAO,GAAG,EAAE,CAAU,kBAAkB;AAA5B;AAEhB,+EAA+E;AAE/E,6DAA6D;AAE7D,IAAI,CAAC,GAAG,CAAC,AAAC,EAAkB,iCAAiC;AAE7D,uFAAuF;AAEvF,IAAI,IAAI,GAAG,IAAM;IACb,UAAU,CAAC,IAAM;QACb,mDAAmD;QACnD,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,EAClB,OAAO,IAAI,MAAM,CAAC,CAAQ,kBAAkB;aACzC,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EACxB,OAAO,IAAI,QAAQ,CAAC,CAAG,gBAAgB;aAEvC,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC;QAExB,eAAe;QACf,6DAA6D;QAC7D,6BAA6B;QAE7B,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,CAAE,gBAAgB;QAC3C,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAO,sBAAsB;QAEtE,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAExB,wDAAwD;QACxD,YAAY;QACZ,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACvB,SAAS;YACT,CAAC,IAAI,CAAC,CAAC;YACP,IAAI,EAAE,CAAC,CAAQ,KAAK;SACvB;KACJ,EAAE,EAAE,CAAC,CAAC;CACV,AAAC;AAEF,IAAI,EAAE,CAAC,CAAc,OAAO;CAE5B,eAAe;CACf,iBAAiB;CACjB,wBAAwB;CACxB,cAAc;CACd,yBAAyB","sources":["main.js"],"sourcesContent":["let html = document.querySelector(\"#html\");  // 此函数的含义是利用CSS选择器找到demo\r\nlet style = document.querySelector(\"style\");\r\nlet string = `/* 你好，我是一名前端新人\r\n* 接下来我将加上样式了\r\n* 我要加的样式是 */\r\n#div1{\r\n    border:1px solid red;\r\n    height:200px;\r\n    width:200px;\r\n}\r\n/* 接下来我把 div 变成一个八卦图\r\n * 首先成为一个圆 \r\n */\r\n#div1{\r\n    border-radius:50%;\r\n    box-shadow:0 0 3px rgba(0,0,0,0.5);\r\n    border:none;\r\n}\r\n/* 八卦是阴阳形成的\r\n * 一黑一白\r\n **/\r\n#div1{\r\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(9,9,121,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/* 加两个风火轮 */\r\n#div1::before{\r\n    width:100px;\r\n    height:100px;\r\n    top:0;\r\n    left: 50%;\r\n    transform:translateX(-50%);\r\n    background:#000;\r\n    border-radius:50%;\r\n    background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 100%);\r\n}\r\n#div1::after{\r\n    width:100px;\r\n    height:100px;\r\n    bottom:0;\r\n    left: 50%;\r\n    transform:translateX(-50%);\r\n    background:#fff;\r\n    border-radius:50%;\r\n    background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%);\r\n}\r\n`;       // 即将打印出来的字母\r\n// 5. 已经在下面进行了innerHTML,然后div1创建一个框 位置放在哪里卸载了html\r\nlet string2 = ''          // 2. 缓存显示string内容\r\n\r\n// string = string.replace(/\\n/g, \"<br>\");     // 2. 正则表达式，将所有的\\n改为<br> 但是会出现 <\r\n\r\n// console.log(string.length)          // 用于测试采用的是n 还是n+1 n-1\r\n\r\nlet n = 0;                  //  使之从0开始计时 即从n=0开始   // 2. 改为-1\r\n\r\n// demo.innerHTML = string.substring(0, n)      // html上打印出来的内容保留    // 2. 删除此句话 为了只写一遍\r\n\r\nlet step = () => {           // 创建一个函数\r\n    setTimeout(() => {       // 利用settimeout函数稍等在做\r\n        // n = n + 1;            // 3. 删除n=-1  改为0  删除n=n+1\r\n        if (string[n] === \"\\n\") {\r\n            string2 += \"<br>\";        // 5. 遇到回车的时候 加 br\r\n        } else if (string[n] === \" \") {\r\n            string2 += \"&nbsp;\";   // 5. 遇到空格的时候有空格\r\n        } else {\r\n            string2 += string[n]\r\n        }\r\n        // 2. 如果是回车就不照搬\r\n        // 4. 简写：string2 += (string[n] === \"\\n\" ? \"<br>\" : string[n])\r\n        // 2. 如果不是回车就照抄  放在2里面 等着缓存表达\r\n\r\n        html.innerHTML = string2;  // 2. 是下面这串字母的延申\r\n        style.innerHTML = string.substring(0, n);       // 5. 利用inner然后进行style\r\n\r\n        window.scrollTo(0, 99999);\r\n        html.scrollTo(0, 99999);\r\n\r\n        // demo.innerHTML = string.substring(0, n);    // 打印出来字母\r\n        // length 55\r\n        if (n < string.length - 1) {       // 跳出去\r\n            // n = 53\r\n            n += 1;\r\n            step();        // 54\r\n        }\r\n    }, 50);\r\n};\r\n\r\nstep();              // 执行函数\r\n\r\n// 2. 以下把CSS加上去\r\n// 3. 试出来是否需要加一减一\r\n// 4. 可以将if else语句改为疑问语句\r\n// 5. 开始写style\r\n// 6. 利用 before after 伪元素\r\n\r\n\r\n"],"names":[],"version":3,"file":"index.c4775257.js.map","sourceRoot":"/__parcel_source_root/"}